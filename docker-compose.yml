services:
  login_client_service:
    build:
      context: ./clients/login
    container_name: login-client-container
    restart: unless-stopped
    depends_on:
      - backend_server_service
    expose:
      - "80"
  landlord_client_service:
    build:
      context: ./clients/landlord
    container_name: landlord-client-container
    restart: unless-stopped
    depends_on:
      - backend_server_service
    expose:
      - "80"
  tenant_client_service:
    build:
      context: ./clients/renter
    container_name: tenant-client-container
    restart: unless-stopped
    depends_on:
      - backend_server_service
    expose:
      - "80"
  backend_server_service:
    build:
      context: .
      dockerfile: servers/backend/Dockerfile
    container_name: backend-server-container
    expose:
      - "3000"
    volumes:
      - ./servers/backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      #- MONGO_URI='mongodb://root:example@database:27017/db?authSource=admin'
    depends_on:
      - database_service
  bank_api_service:
    build:
      context: .
      dockerfile: servers/bank-api/Dockerfile
    container_name: bank-api-container
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - bank_database_service
  database_service:
    image: mongo:latest
    container_name: database-container
    expose:
      - "27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db
  bank_database_service:
    image: mongo:latest
    container_name: bank-database-container
    expose:
      - "27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - bank-mongo-data:/data/db
  nginx_service:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "0:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - login_client_service
      - landlord_client_service
      - tenant_client_service
      - backend_server_service
volumes:
  mongo-data:
  bank-mongo-data:
